/*
 * generated by Xtext 2.22.0
 */
grammar InternalAndroid;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.niste15.mdsd.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.niste15.mdsd.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.niste15.mdsd.services.AndroidGrammarAccess;

}

@parser::members {

 	private AndroidGrammarAccess grammarAccess;

    public InternalAndroidParser(TokenStream input, AndroidGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected AndroidGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getApplicationApplicationParserRuleCall_0());
			}
			lv_application_0_0=ruleApplication
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"application",
					lv_application_0_0,
					"org.xtext.niste15.mdsd.Android.Application");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleApplication
entryRuleApplication returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getApplicationRule()); }
	iv_ruleApplication=ruleApplication
	{ $current=$iv_ruleApplication.current; }
	EOF;

// Rule Application
ruleApplication returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Application'
		{
			newLeafNode(otherlv_0, grammarAccess.getApplicationAccess().getApplicationKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getApplicationAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getApplicationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getApplicationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getApplicationAccess().getPanesPaneParserRuleCall_3_0());
				}
				lv_panes_3_0=rulePane
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getApplicationRule());
					}
					add(
						$current,
						"panes",
						lv_panes_3_0,
						"org.xtext.niste15.mdsd.Android.Pane");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getApplicationAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRulePane
entryRulePane returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPaneRule()); }
	iv_rulePane=rulePane
	{ $current=$iv_rulePane.current; }
	EOF;

// Rule Pane
rulePane returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Pane'
		{
			newLeafNode(otherlv_0, grammarAccess.getPaneAccess().getPaneKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPaneAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPaneRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPaneAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPaneAccess().getFramesFrameParserRuleCall_3_0());
				}
				lv_frames_3_0=ruleFrame
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPaneRule());
					}
					add(
						$current,
						"frames",
						lv_frames_3_0,
						"org.xtext.niste15.mdsd.Android.Frame");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getPaneAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleFrame
entryRuleFrame returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFrameRule()); }
	iv_ruleFrame=ruleFrame
	{ $current=$iv_ruleFrame.current; }
	EOF;

// Rule Frame
ruleFrame returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Frame'
		{
			newLeafNode(otherlv_0, grammarAccess.getFrameAccess().getFrameKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getFrameAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFrameAccess().getElementsElementsParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleElements
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFrameRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"org.xtext.niste15.mdsd.Android.Elements");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getFrameAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleElements
entryRuleElements returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementsRule()); }
	iv_ruleElements=ruleElements
	{ $current=$iv_ruleElements.current; }
	EOF;

// Rule Elements
ruleElements returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getElementsAccess().getButtonParserRuleCall_0());
		}
		this_Button_0=ruleButton
		{
			$current = $this_Button_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementsAccess().getTextParserRuleCall_1());
		}
		this_Text_1=ruleText
		{
			$current = $this_Text_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleText
entryRuleText returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextRule()); }
	iv_ruleText=ruleText
	{ $current=$iv_ruleText.current; }
	EOF;

// Rule Text
ruleText returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Text'
		{
			newLeafNode(otherlv_0, grammarAccess.getTextAccess().getTextKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getTextAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_text_2_0=RULE_STRING
				{
					newLeafNode(lv_text_2_0, grammarAccess.getTextAccess().getTextSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTextRule());
					}
					setWithLastConsumed(
						$current,
						"text",
						lv_text_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTextAccess().getConstraintConstraintParserRuleCall_3_0());
				}
				lv_constraint_3_0=ruleConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTextRule());
					}
					set(
						$current,
						"constraint",
						lv_constraint_3_0,
						"org.xtext.niste15.mdsd.Android.Constraint");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getTextAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleButton
entryRuleButton returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getButtonRule()); }
	iv_ruleButton=ruleButton
	{ $current=$iv_ruleButton.current; }
	EOF;

// Rule Button
ruleButton returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Button'
		{
			newLeafNode(otherlv_0, grammarAccess.getButtonAccess().getButtonKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getButtonAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_text_2_0=RULE_STRING
				{
					newLeafNode(lv_text_2_0, grammarAccess.getButtonAccess().getTextSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getButtonRule());
					}
					setWithLastConsumed(
						$current,
						"text",
						lv_text_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getButtonAccess().getConstraintConstraintParserRuleCall_3_0());
				}
				lv_constraint_3_0=ruleConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getButtonRule());
					}
					set(
						$current,
						"constraint",
						lv_constraint_3_0,
						"org.xtext.niste15.mdsd.Android.Constraint");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getButtonAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleConstraint
entryRuleConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstraintRule()); }
	iv_ruleConstraint=ruleConstraint
	{ $current=$iv_ruleConstraint.current; }
	EOF;

// Rule Constraint
ruleConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getConstraintAccess().getVerticalAction_0_0(),
						$current);
				}
			)
			otherlv_1='constraintsVertical'
			{
				newLeafNode(otherlv_1, grammarAccess.getConstraintAccess().getConstraintsVerticalKeyword_0_1());
			}
			(
				otherlv_2=':'
				{
					newLeafNode(otherlv_2, grammarAccess.getConstraintAccess().getColonKeyword_0_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConstraintAccess().getConstraintTypeConstraintTypeVerticalParserRuleCall_0_2_1_0());
						}
						lv_constraintType_3_0=ruleConstraintTypeVertical
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConstraintRule());
							}
							set(
								$current,
								"constraintType",
								lv_constraintType_3_0,
								"org.xtext.niste15.mdsd.Android.ConstraintTypeVertical");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			otherlv_4='='
			{
				newLeafNode(otherlv_4, grammarAccess.getConstraintAccess().getEqualsSignKeyword_0_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConstraintAccess().getParamConstraintParameterVerticalParserRuleCall_0_4_0());
					}
					lv_param_5_0=ruleConstraintParameterVertical
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstraintRule());
						}
						set(
							$current,
							"param",
							lv_param_5_0,
							"org.xtext.niste15.mdsd.Android.ConstraintParameterVertical");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getConstraintAccess().getHorizontalAction_1_0(),
						$current);
				}
			)
			otherlv_7='constraintsHorizontal'
			{
				newLeafNode(otherlv_7, grammarAccess.getConstraintAccess().getConstraintsHorizontalKeyword_1_1());
			}
			(
				otherlv_8=':'
				{
					newLeafNode(otherlv_8, grammarAccess.getConstraintAccess().getColonKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConstraintAccess().getConstraintTypeConstraintTypeHorizontalParserRuleCall_1_2_1_0());
						}
						lv_constraintType_9_0=ruleConstraintTypeHorizontal
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConstraintRule());
							}
							set(
								$current,
								"constraintType",
								lv_constraintType_9_0,
								"org.xtext.niste15.mdsd.Android.ConstraintTypeHorizontal");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			otherlv_10='='
			{
				newLeafNode(otherlv_10, grammarAccess.getConstraintAccess().getEqualsSignKeyword_1_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConstraintAccess().getParamConstraintParameterHorizontalParserRuleCall_1_4_0());
					}
					lv_param_11_0=ruleConstraintParameterHorizontal
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstraintRule());
						}
						set(
							$current,
							"param",
							lv_param_11_0,
							"org.xtext.niste15.mdsd.Android.ConstraintParameterHorizontal");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleConstraintTypeVertical
entryRuleConstraintTypeVertical returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstraintTypeVerticalRule()); }
	iv_ruleConstraintTypeVertical=ruleConstraintTypeVertical
	{ $current=$iv_ruleConstraintTypeVertical.current; }
	EOF;

// Rule ConstraintTypeVertical
ruleConstraintTypeVertical returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getConstraintTypeVerticalAccess().getRightOfAction_0_0(),
						$current);
				}
			)
			otherlv_1='rightOf'
			{
				newLeafNode(otherlv_1, grammarAccess.getConstraintTypeVerticalAccess().getRightOfKeyword_0_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getConstraintTypeVerticalAccess().getLeftOfAction_1_0(),
						$current);
				}
			)
			otherlv_3='leftOf'
			{
				newLeafNode(otherlv_3, grammarAccess.getConstraintTypeVerticalAccess().getLeftOfKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleConstraintTypeHorizontal
entryRuleConstraintTypeHorizontal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstraintTypeHorizontalRule()); }
	iv_ruleConstraintTypeHorizontal=ruleConstraintTypeHorizontal
	{ $current=$iv_ruleConstraintTypeHorizontal.current; }
	EOF;

// Rule ConstraintTypeHorizontal
ruleConstraintTypeHorizontal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getConstraintTypeHorizontalAccess().getBottomOfAction_0_0(),
						$current);
				}
			)
			otherlv_1='bottomOf'
			{
				newLeafNode(otherlv_1, grammarAccess.getConstraintTypeHorizontalAccess().getBottomOfKeyword_0_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getConstraintTypeHorizontalAccess().getTopOfAction_1_0(),
						$current);
				}
			)
			otherlv_3='topOf'
			{
				newLeafNode(otherlv_3, grammarAccess.getConstraintTypeHorizontalAccess().getTopOfKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleConstraintParameterVertical
entryRuleConstraintParameterVertical returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstraintParameterVerticalRule()); }
	iv_ruleConstraintParameterVertical=ruleConstraintParameterVertical
	{ $current=$iv_ruleConstraintParameterVertical.current; }
	EOF;

// Rule ConstraintParameterVertical
ruleConstraintParameterVertical returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getConstraintParameterVerticalAccess().getPersentageAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_ID
					{
						newLeafNode(lv_value_1_0, grammarAccess.getConstraintParameterVerticalAccess().getValueIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConstraintParameterVerticalRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_2='%'
			{
				newLeafNode(otherlv_2, grammarAccess.getConstraintParameterVerticalAccess().getPercentSignKeyword_0_2());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getConstraintParameterVerticalAccess().getRightAction_1_0(),
						$current);
				}
			)
			otherlv_4='right'
			{
				newLeafNode(otherlv_4, grammarAccess.getConstraintParameterVerticalAccess().getRightKeyword_1_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getConstraintParameterVerticalAccess().getLeftAction_2_0(),
						$current);
				}
			)
			otherlv_6='left'
			{
				newLeafNode(otherlv_6, grammarAccess.getConstraintParameterVerticalAccess().getLeftKeyword_2_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getConstraintParameterVerticalAccess().getMiddleAction_3_0(),
						$current);
				}
			)
			otherlv_8='middle'
			{
				newLeafNode(otherlv_8, grammarAccess.getConstraintParameterVerticalAccess().getMiddleKeyword_3_1());
			}
		)
	)
;

// Entry rule entryRuleConstraintParameterHorizontal
entryRuleConstraintParameterHorizontal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstraintParameterHorizontalRule()); }
	iv_ruleConstraintParameterHorizontal=ruleConstraintParameterHorizontal
	{ $current=$iv_ruleConstraintParameterHorizontal.current; }
	EOF;

// Rule ConstraintParameterHorizontal
ruleConstraintParameterHorizontal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getConstraintParameterHorizontalAccess().getPersentageAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_ID
					{
						newLeafNode(lv_value_1_0, grammarAccess.getConstraintParameterHorizontalAccess().getValueIDTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConstraintParameterHorizontalRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_2='%'
			{
				newLeafNode(otherlv_2, grammarAccess.getConstraintParameterHorizontalAccess().getPercentSignKeyword_0_2());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getConstraintParameterHorizontalAccess().getTopAction_1_0(),
						$current);
				}
			)
			otherlv_4='top'
			{
				newLeafNode(otherlv_4, grammarAccess.getConstraintParameterHorizontalAccess().getTopKeyword_1_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getConstraintParameterHorizontalAccess().getBottomAction_2_0(),
						$current);
				}
			)
			otherlv_6='bottom'
			{
				newLeafNode(otherlv_6, grammarAccess.getConstraintParameterHorizontalAccess().getBottomKeyword_2_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getConstraintParameterHorizontalAccess().getMiddleAction_3_0(),
						$current);
				}
			)
			otherlv_8='middle'
			{
				newLeafNode(otherlv_8, grammarAccess.getConstraintParameterHorizontalAccess().getMiddleKeyword_3_1());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
