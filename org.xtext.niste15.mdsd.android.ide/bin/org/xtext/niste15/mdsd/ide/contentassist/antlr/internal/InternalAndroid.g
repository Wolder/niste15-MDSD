/*
 * generated by Xtext 2.22.0
 */
grammar InternalAndroid;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.niste15.mdsd.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.niste15.mdsd.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.niste15.mdsd.services.AndroidGrammarAccess;

}
@parser::members {
	private AndroidGrammarAccess grammarAccess;

	public void setGrammarAccess(AndroidGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getApplicationAssignment()); }
		(rule__Model__ApplicationAssignment)
		{ after(grammarAccess.getModelAccess().getApplicationAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleApplication
entryRuleApplication
:
{ before(grammarAccess.getApplicationRule()); }
	 ruleApplication
{ after(grammarAccess.getApplicationRule()); } 
	 EOF 
;

// Rule Application
ruleApplication 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getApplicationAccess().getGroup()); }
		(rule__Application__Group__0)
		{ after(grammarAccess.getApplicationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePane
entryRulePane
:
{ before(grammarAccess.getPaneRule()); }
	 rulePane
{ after(grammarAccess.getPaneRule()); } 
	 EOF 
;

// Rule Pane
rulePane 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPaneAccess().getGroup()); }
		(rule__Pane__Group__0)
		{ after(grammarAccess.getPaneAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFrame
entryRuleFrame
:
{ before(grammarAccess.getFrameRule()); }
	 ruleFrame
{ after(grammarAccess.getFrameRule()); } 
	 EOF 
;

// Rule Frame
ruleFrame 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFrameAccess().getGroup()); }
		(rule__Frame__Group__0)
		{ after(grammarAccess.getFrameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElements
entryRuleElements
:
{ before(grammarAccess.getElementsRule()); }
	 ruleElements
{ after(grammarAccess.getElementsRule()); } 
	 EOF 
;

// Rule Elements
ruleElements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementsAccess().getAlternatives()); }
		(rule__Elements__Alternatives)
		{ after(grammarAccess.getElementsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleText
entryRuleText
:
{ before(grammarAccess.getTextRule()); }
	 ruleText
{ after(grammarAccess.getTextRule()); } 
	 EOF 
;

// Rule Text
ruleText 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextAccess().getGroup()); }
		(rule__Text__Group__0)
		{ after(grammarAccess.getTextAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleButton
entryRuleButton
:
{ before(grammarAccess.getButtonRule()); }
	 ruleButton
{ after(grammarAccess.getButtonRule()); } 
	 EOF 
;

// Rule Button
ruleButton 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getButtonAccess().getGroup()); }
		(rule__Button__Group__0)
		{ after(grammarAccess.getButtonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstraint
entryRuleConstraint
:
{ before(grammarAccess.getConstraintRule()); }
	 ruleConstraint
{ after(grammarAccess.getConstraintRule()); } 
	 EOF 
;

// Rule Constraint
ruleConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstraintAccess().getAlternatives()); }
		(rule__Constraint__Alternatives)
		{ after(grammarAccess.getConstraintAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstraintTypeVertical
entryRuleConstraintTypeVertical
:
{ before(grammarAccess.getConstraintTypeVerticalRule()); }
	 ruleConstraintTypeVertical
{ after(grammarAccess.getConstraintTypeVerticalRule()); } 
	 EOF 
;

// Rule ConstraintTypeVertical
ruleConstraintTypeVertical 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstraintTypeVerticalAccess().getAlternatives()); }
		(rule__ConstraintTypeVertical__Alternatives)
		{ after(grammarAccess.getConstraintTypeVerticalAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstraintParameter
entryRuleConstraintParameter
:
{ before(grammarAccess.getConstraintParameterRule()); }
	 ruleConstraintParameter
{ after(grammarAccess.getConstraintParameterRule()); } 
	 EOF 
;

// Rule ConstraintParameter
ruleConstraintParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstraintParameterAccess().getAlternatives()); }
		(rule__ConstraintParameter__Alternatives)
		{ after(grammarAccess.getConstraintParameterAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Elements__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementsAccess().getButtonParserRuleCall_0()); }
		ruleButton
		{ after(grammarAccess.getElementsAccess().getButtonParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementsAccess().getTextParserRuleCall_1()); }
		ruleText
		{ after(grammarAccess.getElementsAccess().getTextParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getGroup_0()); }
		(rule__Constraint__Group_0__0)
		{ after(grammarAccess.getConstraintAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstraintAccess().getGroup_1()); }
		(rule__Constraint__Group_1__0)
		{ after(grammarAccess.getConstraintAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintTypeVertical__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintTypeVerticalAccess().getGroup_0()); }
		(rule__ConstraintTypeVertical__Group_0__0)
		{ after(grammarAccess.getConstraintTypeVerticalAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstraintTypeVerticalAccess().getGroup_1()); }
		(rule__ConstraintTypeVertical__Group_1__0)
		{ after(grammarAccess.getConstraintTypeVerticalAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getConstraintTypeVerticalAccess().getGroup_2()); }
		(rule__ConstraintTypeVertical__Group_2__0)
		{ after(grammarAccess.getConstraintTypeVerticalAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getConstraintTypeVerticalAccess().getGroup_3()); }
		(rule__ConstraintTypeVertical__Group_3__0)
		{ after(grammarAccess.getConstraintTypeVerticalAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameter__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintParameterAccess().getGroup_0()); }
		(rule__ConstraintParameter__Group_0__0)
		{ after(grammarAccess.getConstraintParameterAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstraintParameterAccess().getGroup_1()); }
		(rule__ConstraintParameter__Group_1__0)
		{ after(grammarAccess.getConstraintParameterAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getConstraintParameterAccess().getGroup_2()); }
		(rule__ConstraintParameter__Group_2__0)
		{ after(grammarAccess.getConstraintParameterAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getConstraintParameterAccess().getGroup_3()); }
		(rule__ConstraintParameter__Group_3__0)
		{ after(grammarAccess.getConstraintParameterAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getConstraintParameterAccess().getGroup_4()); }
		(rule__ConstraintParameter__Group_4__0)
		{ after(grammarAccess.getConstraintParameterAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getConstraintParameterAccess().getGroup_5()); }
		(rule__ConstraintParameter__Group_5__0)
		{ after(grammarAccess.getConstraintParameterAccess().getGroup_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group__0__Impl
	rule__Application__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getApplicationKeyword_0()); }
	'Application'
	{ after(grammarAccess.getApplicationAccess().getApplicationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group__1__Impl
	rule__Application__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getNameAssignment_1()); }
	(rule__Application__NameAssignment_1)
	{ after(grammarAccess.getApplicationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group__2__Impl
	rule__Application__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getApplicationAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group__3__Impl
	rule__Application__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getPanesAssignment_3()); }
	(rule__Application__PanesAssignment_3)*
	{ after(grammarAccess.getApplicationAccess().getPanesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getApplicationAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pane__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pane__Group__0__Impl
	rule__Pane__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pane__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPaneAccess().getPaneAction_0()); }
	()
	{ after(grammarAccess.getPaneAccess().getPaneAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pane__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pane__Group__1__Impl
	rule__Pane__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pane__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPaneAccess().getPaneKeyword_1()); }
	'Pane'
	{ after(grammarAccess.getPaneAccess().getPaneKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pane__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pane__Group__2__Impl
	rule__Pane__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pane__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPaneAccess().getNameAssignment_2()); }
	(rule__Pane__NameAssignment_2)?
	{ after(grammarAccess.getPaneAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pane__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pane__Group__3__Impl
	rule__Pane__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Pane__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPaneAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getPaneAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pane__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pane__Group__4__Impl
	rule__Pane__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Pane__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPaneAccess().getFramesAssignment_4()); }
	(rule__Pane__FramesAssignment_4)*
	{ after(grammarAccess.getPaneAccess().getFramesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pane__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pane__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pane__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPaneAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getPaneAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Frame__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Frame__Group__0__Impl
	rule__Frame__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFrameAccess().getFrameAction_0()); }
	()
	{ after(grammarAccess.getFrameAccess().getFrameAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Frame__Group__1__Impl
	rule__Frame__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFrameAccess().getFrameKeyword_1()); }
	'Frame'
	{ after(grammarAccess.getFrameAccess().getFrameKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Frame__Group__2__Impl
	rule__Frame__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFrameAccess().getNameAssignment_2()); }
	(rule__Frame__NameAssignment_2)?
	{ after(grammarAccess.getFrameAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Frame__Group__3__Impl
	rule__Frame__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFrameAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getFrameAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Frame__Group__4__Impl
	rule__Frame__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFrameAccess().getElementsAssignment_4()); }
	(rule__Frame__ElementsAssignment_4)*
	{ after(grammarAccess.getFrameAccess().getElementsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Frame__Group__5__Impl
	rule__Frame__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFrameAccess().getConstraintAssignment_5()); }
	(rule__Frame__ConstraintAssignment_5)?
	{ after(grammarAccess.getFrameAccess().getConstraintAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Frame__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFrameAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getFrameAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__0__Impl
	rule__Text__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getTextKeyword_0()); }
	'Text'
	{ after(grammarAccess.getTextAccess().getTextKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__1__Impl
	rule__Text__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getTextAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__2__Impl
	rule__Text__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getTextAssignment_2()); }
	(rule__Text__TextAssignment_2)
	{ after(grammarAccess.getTextAccess().getTextAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getTextAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Button__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__0__Impl
	rule__Button__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getButtonKeyword_0()); }
	'Button'
	{ after(grammarAccess.getButtonAccess().getButtonKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__1__Impl
	rule__Button__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getButtonAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__2__Impl
	rule__Button__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getTextAssignment_2()); }
	(rule__Button__TextAssignment_2)
	{ after(grammarAccess.getButtonAccess().getTextAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__3__Impl
	rule__Button__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getGroup_3()); }
	(rule__Button__Group_3__0)?
	{ after(grammarAccess.getButtonAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getButtonAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Button__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group_3__0__Impl
	rule__Button__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getNavigateKeyword_3_0()); }
	'navigate'
	{ after(grammarAccess.getButtonAccess().getNavigateKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group_3__1__Impl
	rule__Button__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getHyphenMinusGreaterThanSignKeyword_3_1()); }
	'->'
	{ after(grammarAccess.getButtonAccess().getHyphenMinusGreaterThanSignKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getPaneAssignment_3_2()); }
	(rule__Button__PaneAssignment_3_2)
	{ after(grammarAccess.getButtonAccess().getPaneAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_0__0__Impl
	rule__Constraint__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getConstraintKeyword_0_0()); }
	'constraint'
	{ after(grammarAccess.getConstraintAccess().getConstraintKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_0__1__Impl
	rule__Constraint__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getColonKeyword_0_1()); }
	':'
	{ after(grammarAccess.getConstraintAccess().getColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_0__2__Impl
	rule__Constraint__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getConstraintTypeAssignment_0_2()); }
	(rule__Constraint__ConstraintTypeAssignment_0_2)
	{ after(grammarAccess.getConstraintAccess().getConstraintTypeAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_0__3__Impl
	rule__Constraint__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getEqualsSignKeyword_0_3()); }
	'='
	{ after(grammarAccess.getConstraintAccess().getEqualsSignKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getFrameAssignment_0_4()); }
	(rule__Constraint__FrameAssignment_0_4)
	{ after(grammarAccess.getConstraintAccess().getFrameAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_1__0__Impl
	rule__Constraint__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getConstraintKeyword_1_0()); }
	'constraint'
	{ after(grammarAccess.getConstraintAccess().getConstraintKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_1__1__Impl
	rule__Constraint__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getEqualsSignKeyword_1_1()); }
	'='
	{ after(grammarAccess.getConstraintAccess().getEqualsSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getParamAssignment_1_2()); }
	(rule__Constraint__ParamAssignment_1_2)
	{ after(grammarAccess.getConstraintAccess().getParamAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintTypeVertical__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintTypeVertical__Group_0__0__Impl
	rule__ConstraintTypeVertical__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintTypeVertical__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintTypeVerticalAccess().getRightOfAction_0_0()); }
	()
	{ after(grammarAccess.getConstraintTypeVerticalAccess().getRightOfAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintTypeVertical__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintTypeVertical__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintTypeVertical__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintTypeVerticalAccess().getRightOfKeyword_0_1()); }
	'rightOf'
	{ after(grammarAccess.getConstraintTypeVerticalAccess().getRightOfKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintTypeVertical__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintTypeVertical__Group_1__0__Impl
	rule__ConstraintTypeVertical__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintTypeVertical__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintTypeVerticalAccess().getLeftOfAction_1_0()); }
	()
	{ after(grammarAccess.getConstraintTypeVerticalAccess().getLeftOfAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintTypeVertical__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintTypeVertical__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintTypeVertical__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintTypeVerticalAccess().getLeftOfKeyword_1_1()); }
	'leftOf'
	{ after(grammarAccess.getConstraintTypeVerticalAccess().getLeftOfKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintTypeVertical__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintTypeVertical__Group_2__0__Impl
	rule__ConstraintTypeVertical__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintTypeVertical__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintTypeVerticalAccess().getBottomOfAction_2_0()); }
	()
	{ after(grammarAccess.getConstraintTypeVerticalAccess().getBottomOfAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintTypeVertical__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintTypeVertical__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintTypeVertical__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintTypeVerticalAccess().getBottomOfKeyword_2_1()); }
	'bottomOf'
	{ after(grammarAccess.getConstraintTypeVerticalAccess().getBottomOfKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintTypeVertical__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintTypeVertical__Group_3__0__Impl
	rule__ConstraintTypeVertical__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintTypeVertical__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintTypeVerticalAccess().getTopOfAction_3_0()); }
	()
	{ after(grammarAccess.getConstraintTypeVerticalAccess().getTopOfAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintTypeVertical__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintTypeVertical__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintTypeVertical__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintTypeVerticalAccess().getTopOfKeyword_3_1()); }
	'topOf'
	{ after(grammarAccess.getConstraintTypeVerticalAccess().getTopOfKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintParameter__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameter__Group_0__0__Impl
	rule__ConstraintParameter__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameter__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterAccess().getPersentageAction_0_0()); }
	()
	{ after(grammarAccess.getConstraintParameterAccess().getPersentageAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameter__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameter__Group_0__1__Impl
	rule__ConstraintParameter__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameter__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterAccess().getValueAssignment_0_1()); }
	(rule__ConstraintParameter__ValueAssignment_0_1)
	{ after(grammarAccess.getConstraintParameterAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameter__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameter__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameter__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterAccess().getPercentSignKeyword_0_2()); }
	'%'
	{ after(grammarAccess.getConstraintParameterAccess().getPercentSignKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintParameter__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameter__Group_1__0__Impl
	rule__ConstraintParameter__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameter__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterAccess().getRightAction_1_0()); }
	()
	{ after(grammarAccess.getConstraintParameterAccess().getRightAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameter__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameter__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameter__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterAccess().getRightKeyword_1_1()); }
	'right'
	{ after(grammarAccess.getConstraintParameterAccess().getRightKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintParameter__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameter__Group_2__0__Impl
	rule__ConstraintParameter__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameter__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterAccess().getLeftAction_2_0()); }
	()
	{ after(grammarAccess.getConstraintParameterAccess().getLeftAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameter__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameter__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameter__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterAccess().getLeftKeyword_2_1()); }
	'left'
	{ after(grammarAccess.getConstraintParameterAccess().getLeftKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintParameter__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameter__Group_3__0__Impl
	rule__ConstraintParameter__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameter__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterAccess().getTopAction_3_0()); }
	()
	{ after(grammarAccess.getConstraintParameterAccess().getTopAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameter__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameter__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameter__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterAccess().getTopKeyword_3_1()); }
	'top'
	{ after(grammarAccess.getConstraintParameterAccess().getTopKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintParameter__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameter__Group_4__0__Impl
	rule__ConstraintParameter__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameter__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterAccess().getBottomAction_4_0()); }
	()
	{ after(grammarAccess.getConstraintParameterAccess().getBottomAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameter__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameter__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameter__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterAccess().getBottomKeyword_4_1()); }
	'bottom'
	{ after(grammarAccess.getConstraintParameterAccess().getBottomKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintParameter__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameter__Group_5__0__Impl
	rule__ConstraintParameter__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameter__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterAccess().getMiddleAction_5_0()); }
	()
	{ after(grammarAccess.getConstraintParameterAccess().getMiddleAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameter__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameter__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameter__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterAccess().getMiddleKeyword_5_1()); }
	'middle'
	{ after(grammarAccess.getConstraintParameterAccess().getMiddleKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ApplicationAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getApplicationApplicationParserRuleCall_0()); }
		ruleApplication
		{ after(grammarAccess.getModelAccess().getApplicationApplicationParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplicationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getApplicationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__PanesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplicationAccess().getPanesPaneParserRuleCall_3_0()); }
		rulePane
		{ after(grammarAccess.getApplicationAccess().getPanesPaneParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pane__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPaneAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getPaneAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pane__FramesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPaneAccess().getFramesFrameParserRuleCall_4_0()); }
		ruleFrame
		{ after(grammarAccess.getPaneAccess().getFramesFrameParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFrameAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getFrameAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__ElementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFrameAccess().getElementsElementsParserRuleCall_4_0()); }
		ruleElements
		{ after(grammarAccess.getFrameAccess().getElementsElementsParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__ConstraintAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFrameAccess().getConstraintConstraintParserRuleCall_5_0()); }
		ruleConstraint
		{ after(grammarAccess.getFrameAccess().getConstraintConstraintParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__TextAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getTextSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getTextAccess().getTextSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__TextAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonAccess().getTextSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getButtonAccess().getTextSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__PaneAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonAccess().getPanePaneCrossReference_3_2_0()); }
		(
			{ before(grammarAccess.getButtonAccess().getPanePaneIDTerminalRuleCall_3_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getButtonAccess().getPanePaneIDTerminalRuleCall_3_2_0_1()); }
		)
		{ after(grammarAccess.getButtonAccess().getPanePaneCrossReference_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__ConstraintTypeAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getConstraintTypeConstraintTypeVerticalParserRuleCall_0_2_0()); }
		ruleConstraintTypeVertical
		{ after(grammarAccess.getConstraintAccess().getConstraintTypeConstraintTypeVerticalParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__FrameAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getFrameFrameCrossReference_0_4_0()); }
		(
			{ before(grammarAccess.getConstraintAccess().getFrameFrameIDTerminalRuleCall_0_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getConstraintAccess().getFrameFrameIDTerminalRuleCall_0_4_0_1()); }
		)
		{ after(grammarAccess.getConstraintAccess().getFrameFrameCrossReference_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__ParamAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getParamConstraintParameterParserRuleCall_1_2_0()); }
		ruleConstraintParameter
		{ after(grammarAccess.getConstraintAccess().getParamConstraintParameterParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameter__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintParameterAccess().getValueIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getConstraintParameterAccess().getValueIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
