/*
 * generated by Xtext 2.22.0
 */
grammar InternalAndroid;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.niste15.mdsd.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.niste15.mdsd.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.niste15.mdsd.services.AndroidGrammarAccess;

}
@parser::members {
	private AndroidGrammarAccess grammarAccess;

	public void setGrammarAccess(AndroidGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getApplicationAssignment()); }
		(rule__Model__ApplicationAssignment)*
		{ after(grammarAccess.getModelAccess().getApplicationAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleApplication
entryRuleApplication
:
{ before(grammarAccess.getApplicationRule()); }
	 ruleApplication
{ after(grammarAccess.getApplicationRule()); } 
	 EOF 
;

// Rule Application
ruleApplication 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getApplicationAccess().getGroup()); }
		(rule__Application__Group__0)
		{ after(grammarAccess.getApplicationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePane
entryRulePane
:
{ before(grammarAccess.getPaneRule()); }
	 rulePane
{ after(grammarAccess.getPaneRule()); } 
	 EOF 
;

// Rule Pane
rulePane 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPaneAccess().getGroup()); }
		(rule__Pane__Group__0)
		{ after(grammarAccess.getPaneAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFrame
entryRuleFrame
:
{ before(grammarAccess.getFrameRule()); }
	 ruleFrame
{ after(grammarAccess.getFrameRule()); } 
	 EOF 
;

// Rule Frame
ruleFrame 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFrameAccess().getGroup()); }
		(rule__Frame__Group__0)
		{ after(grammarAccess.getFrameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElements
entryRuleElements
:
{ before(grammarAccess.getElementsRule()); }
	 ruleElements
{ after(grammarAccess.getElementsRule()); } 
	 EOF 
;

// Rule Elements
ruleElements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementsAccess().getAlternatives()); }
		(rule__Elements__Alternatives)
		{ after(grammarAccess.getElementsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleText
entryRuleText
:
{ before(grammarAccess.getTextRule()); }
	 ruleText
{ after(grammarAccess.getTextRule()); } 
	 EOF 
;

// Rule Text
ruleText 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextAccess().getGroup()); }
		(rule__Text__Group__0)
		{ after(grammarAccess.getTextAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleButton
entryRuleButton
:
{ before(grammarAccess.getButtonRule()); }
	 ruleButton
{ after(grammarAccess.getButtonRule()); } 
	 EOF 
;

// Rule Button
ruleButton 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getButtonAccess().getGroup()); }
		(rule__Button__Group__0)
		{ after(grammarAccess.getButtonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstraint
entryRuleConstraint
:
{ before(grammarAccess.getConstraintRule()); }
	 ruleConstraint
{ after(grammarAccess.getConstraintRule()); } 
	 EOF 
;

// Rule Constraint
ruleConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstraintAccess().getAlternatives()); }
		(rule__Constraint__Alternatives)
		{ after(grammarAccess.getConstraintAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstraintTypeVertical
entryRuleConstraintTypeVertical
:
{ before(grammarAccess.getConstraintTypeVerticalRule()); }
	 ruleConstraintTypeVertical
{ after(grammarAccess.getConstraintTypeVerticalRule()); } 
	 EOF 
;

// Rule ConstraintTypeVertical
ruleConstraintTypeVertical 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstraintTypeVerticalAccess().getAlternatives()); }
		(rule__ConstraintTypeVertical__Alternatives)
		{ after(grammarAccess.getConstraintTypeVerticalAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstraintTypeHorizontal
entryRuleConstraintTypeHorizontal
:
{ before(grammarAccess.getConstraintTypeHorizontalRule()); }
	 ruleConstraintTypeHorizontal
{ after(grammarAccess.getConstraintTypeHorizontalRule()); } 
	 EOF 
;

// Rule ConstraintTypeHorizontal
ruleConstraintTypeHorizontal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstraintTypeHorizontalAccess().getAlternatives()); }
		(rule__ConstraintTypeHorizontal__Alternatives)
		{ after(grammarAccess.getConstraintTypeHorizontalAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstraintParameterVertical
entryRuleConstraintParameterVertical
:
{ before(grammarAccess.getConstraintParameterVerticalRule()); }
	 ruleConstraintParameterVertical
{ after(grammarAccess.getConstraintParameterVerticalRule()); } 
	 EOF 
;

// Rule ConstraintParameterVertical
ruleConstraintParameterVertical 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstraintParameterVerticalAccess().getAlternatives()); }
		(rule__ConstraintParameterVertical__Alternatives)
		{ after(grammarAccess.getConstraintParameterVerticalAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstraintParameterHorizontal
entryRuleConstraintParameterHorizontal
:
{ before(grammarAccess.getConstraintParameterHorizontalRule()); }
	 ruleConstraintParameterHorizontal
{ after(grammarAccess.getConstraintParameterHorizontalRule()); } 
	 EOF 
;

// Rule ConstraintParameterHorizontal
ruleConstraintParameterHorizontal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstraintParameterHorizontalAccess().getAlternatives()); }
		(rule__ConstraintParameterHorizontal__Alternatives)
		{ after(grammarAccess.getConstraintParameterHorizontalAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Elements__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementsAccess().getButtonParserRuleCall_0()); }
		ruleButton
		{ after(grammarAccess.getElementsAccess().getButtonParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementsAccess().getTextParserRuleCall_1()); }
		ruleText
		{ after(grammarAccess.getElementsAccess().getTextParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getGroup_0()); }
		(rule__Constraint__Group_0__0)
		{ after(grammarAccess.getConstraintAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstraintAccess().getGroup_1()); }
		(rule__Constraint__Group_1__0)
		{ after(grammarAccess.getConstraintAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintTypeVertical__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintTypeVerticalAccess().getGroup_0()); }
		(rule__ConstraintTypeVertical__Group_0__0)
		{ after(grammarAccess.getConstraintTypeVerticalAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstraintTypeVerticalAccess().getGroup_1()); }
		(rule__ConstraintTypeVertical__Group_1__0)
		{ after(grammarAccess.getConstraintTypeVerticalAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintTypeHorizontal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintTypeHorizontalAccess().getGroup_0()); }
		(rule__ConstraintTypeHorizontal__Group_0__0)
		{ after(grammarAccess.getConstraintTypeHorizontalAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstraintTypeHorizontalAccess().getGroup_1()); }
		(rule__ConstraintTypeHorizontal__Group_1__0)
		{ after(grammarAccess.getConstraintTypeHorizontalAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterVertical__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintParameterVerticalAccess().getGroup_0()); }
		(rule__ConstraintParameterVertical__Group_0__0)
		{ after(grammarAccess.getConstraintParameterVerticalAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstraintParameterVerticalAccess().getGroup_1()); }
		(rule__ConstraintParameterVertical__Group_1__0)
		{ after(grammarAccess.getConstraintParameterVerticalAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getConstraintParameterVerticalAccess().getGroup_2()); }
		(rule__ConstraintParameterVertical__Group_2__0)
		{ after(grammarAccess.getConstraintParameterVerticalAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getConstraintParameterVerticalAccess().getGroup_3()); }
		(rule__ConstraintParameterVertical__Group_3__0)
		{ after(grammarAccess.getConstraintParameterVerticalAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterHorizontal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintParameterHorizontalAccess().getGroup_0()); }
		(rule__ConstraintParameterHorizontal__Group_0__0)
		{ after(grammarAccess.getConstraintParameterHorizontalAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstraintParameterHorizontalAccess().getGroup_1()); }
		(rule__ConstraintParameterHorizontal__Group_1__0)
		{ after(grammarAccess.getConstraintParameterHorizontalAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getConstraintParameterHorizontalAccess().getGroup_2()); }
		(rule__ConstraintParameterHorizontal__Group_2__0)
		{ after(grammarAccess.getConstraintParameterHorizontalAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getConstraintParameterHorizontalAccess().getGroup_3()); }
		(rule__ConstraintParameterHorizontal__Group_3__0)
		{ after(grammarAccess.getConstraintParameterHorizontalAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group__0__Impl
	rule__Application__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getApplicationKeyword_0()); }
	'Application'
	{ after(grammarAccess.getApplicationAccess().getApplicationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group__1__Impl
	rule__Application__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getNameAssignment_1()); }
	(rule__Application__NameAssignment_1)
	{ after(grammarAccess.getApplicationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group__2__Impl
	rule__Application__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getApplicationAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group__3__Impl
	rule__Application__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getPanesAssignment_3()); }
	(rule__Application__PanesAssignment_3)
	{ after(grammarAccess.getApplicationAccess().getPanesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Application__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApplicationAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getApplicationAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pane__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pane__Group__0__Impl
	rule__Pane__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pane__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPaneAccess().getPaneKeyword_0()); }
	'Pane'
	{ after(grammarAccess.getPaneAccess().getPaneKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pane__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pane__Group__1__Impl
	rule__Pane__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pane__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPaneAccess().getNameAssignment_1()); }
	(rule__Pane__NameAssignment_1)
	{ after(grammarAccess.getPaneAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pane__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pane__Group__2__Impl
	rule__Pane__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Pane__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPaneAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getPaneAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pane__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pane__Group__3__Impl
	rule__Pane__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Pane__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPaneAccess().getFramesAssignment_3()); }
	(rule__Pane__FramesAssignment_3)
	{ after(grammarAccess.getPaneAccess().getFramesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pane__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pane__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pane__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPaneAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getPaneAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Frame__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Frame__Group__0__Impl
	rule__Frame__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFrameAccess().getFrameKeyword_0()); }
	'Frame'
	{ after(grammarAccess.getFrameAccess().getFrameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Frame__Group__1__Impl
	rule__Frame__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFrameAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getFrameAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Frame__Group__2__Impl
	rule__Frame__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFrameAccess().getElementsAssignment_2()); }
	(rule__Frame__ElementsAssignment_2)
	{ after(grammarAccess.getFrameAccess().getElementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Frame__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFrameAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getFrameAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__0__Impl
	rule__Text__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getTextKeyword_0()); }
	'Text'
	{ after(grammarAccess.getTextAccess().getTextKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__1__Impl
	rule__Text__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getTextAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__2__Impl
	rule__Text__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getTextAssignment_2()); }
	(rule__Text__TextAssignment_2)
	{ after(grammarAccess.getTextAccess().getTextAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__3__Impl
	rule__Text__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getConstraintAssignment_3()); }
	(rule__Text__ConstraintAssignment_3)
	{ after(grammarAccess.getTextAccess().getConstraintAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getTextAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Button__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__0__Impl
	rule__Button__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getButtonKeyword_0()); }
	'Button'
	{ after(grammarAccess.getButtonAccess().getButtonKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__1__Impl
	rule__Button__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getButtonAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__2__Impl
	rule__Button__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getTextAssignment_2()); }
	(rule__Button__TextAssignment_2)
	{ after(grammarAccess.getButtonAccess().getTextAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__3__Impl
	rule__Button__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getConstraintAssignment_3()); }
	(rule__Button__ConstraintAssignment_3)
	{ after(grammarAccess.getButtonAccess().getConstraintAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getButtonAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_0__0__Impl
	rule__Constraint__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getVerticalAction_0_0()); }
	()
	{ after(grammarAccess.getConstraintAccess().getVerticalAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_0__1__Impl
	rule__Constraint__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getConstraintsVerticalKeyword_0_1()); }
	'constraintsVertical'
	{ after(grammarAccess.getConstraintAccess().getConstraintsVerticalKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_0__2__Impl
	rule__Constraint__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getGroup_0_2()); }
	(rule__Constraint__Group_0_2__0)
	{ after(grammarAccess.getConstraintAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_0__3__Impl
	rule__Constraint__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getEqualsSignKeyword_0_3()); }
	'='
	{ after(grammarAccess.getConstraintAccess().getEqualsSignKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getParamAssignment_0_4()); }
	(rule__Constraint__ParamAssignment_0_4)
	{ after(grammarAccess.getConstraintAccess().getParamAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_0_2__0__Impl
	rule__Constraint__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getColonKeyword_0_2_0()); }
	':'
	{ after(grammarAccess.getConstraintAccess().getColonKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getConstraintTypeAssignment_0_2_1()); }
	(rule__Constraint__ConstraintTypeAssignment_0_2_1)
	{ after(grammarAccess.getConstraintAccess().getConstraintTypeAssignment_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_1__0__Impl
	rule__Constraint__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getHorizontalAction_1_0()); }
	()
	{ after(grammarAccess.getConstraintAccess().getHorizontalAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_1__1__Impl
	rule__Constraint__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getConstraintsHorizontalKeyword_1_1()); }
	'constraintsHorizontal'
	{ after(grammarAccess.getConstraintAccess().getConstraintsHorizontalKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_1__2__Impl
	rule__Constraint__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getGroup_1_2()); }
	(rule__Constraint__Group_1_2__0)
	{ after(grammarAccess.getConstraintAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_1__3__Impl
	rule__Constraint__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getEqualsSignKeyword_1_3()); }
	'='
	{ after(grammarAccess.getConstraintAccess().getEqualsSignKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getParamAssignment_1_4()); }
	(rule__Constraint__ParamAssignment_1_4)
	{ after(grammarAccess.getConstraintAccess().getParamAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_1_2__0__Impl
	rule__Constraint__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getColonKeyword_1_2_0()); }
	':'
	{ after(grammarAccess.getConstraintAccess().getColonKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constraint__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintAccess().getConstraintTypeAssignment_1_2_1()); }
	(rule__Constraint__ConstraintTypeAssignment_1_2_1)
	{ after(grammarAccess.getConstraintAccess().getConstraintTypeAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintTypeVertical__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintTypeVertical__Group_0__0__Impl
	rule__ConstraintTypeVertical__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintTypeVertical__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintTypeVerticalAccess().getRightOfAction_0_0()); }
	()
	{ after(grammarAccess.getConstraintTypeVerticalAccess().getRightOfAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintTypeVertical__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintTypeVertical__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintTypeVertical__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintTypeVerticalAccess().getRightOfKeyword_0_1()); }
	'rightOf'
	{ after(grammarAccess.getConstraintTypeVerticalAccess().getRightOfKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintTypeVertical__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintTypeVertical__Group_1__0__Impl
	rule__ConstraintTypeVertical__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintTypeVertical__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintTypeVerticalAccess().getLeftOfAction_1_0()); }
	()
	{ after(grammarAccess.getConstraintTypeVerticalAccess().getLeftOfAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintTypeVertical__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintTypeVertical__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintTypeVertical__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintTypeVerticalAccess().getLeftOfKeyword_1_1()); }
	'leftOf'
	{ after(grammarAccess.getConstraintTypeVerticalAccess().getLeftOfKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintTypeHorizontal__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintTypeHorizontal__Group_0__0__Impl
	rule__ConstraintTypeHorizontal__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintTypeHorizontal__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintTypeHorizontalAccess().getBottomOfAction_0_0()); }
	()
	{ after(grammarAccess.getConstraintTypeHorizontalAccess().getBottomOfAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintTypeHorizontal__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintTypeHorizontal__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintTypeHorizontal__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintTypeHorizontalAccess().getBottomOfKeyword_0_1()); }
	'bottomOf'
	{ after(grammarAccess.getConstraintTypeHorizontalAccess().getBottomOfKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintTypeHorizontal__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintTypeHorizontal__Group_1__0__Impl
	rule__ConstraintTypeHorizontal__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintTypeHorizontal__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintTypeHorizontalAccess().getTopOfAction_1_0()); }
	()
	{ after(grammarAccess.getConstraintTypeHorizontalAccess().getTopOfAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintTypeHorizontal__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintTypeHorizontal__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintTypeHorizontal__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintTypeHorizontalAccess().getTopOfKeyword_1_1()); }
	'topOf'
	{ after(grammarAccess.getConstraintTypeHorizontalAccess().getTopOfKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintParameterVertical__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameterVertical__Group_0__0__Impl
	rule__ConstraintParameterVertical__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterVertical__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterVerticalAccess().getPersentageAction_0_0()); }
	()
	{ after(grammarAccess.getConstraintParameterVerticalAccess().getPersentageAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterVertical__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameterVertical__Group_0__1__Impl
	rule__ConstraintParameterVertical__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterVertical__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterVerticalAccess().getValueAssignment_0_1()); }
	(rule__ConstraintParameterVertical__ValueAssignment_0_1)
	{ after(grammarAccess.getConstraintParameterVerticalAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterVertical__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameterVertical__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterVertical__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterVerticalAccess().getPercentSignKeyword_0_2()); }
	'%'
	{ after(grammarAccess.getConstraintParameterVerticalAccess().getPercentSignKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintParameterVertical__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameterVertical__Group_1__0__Impl
	rule__ConstraintParameterVertical__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterVertical__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterVerticalAccess().getRightAction_1_0()); }
	()
	{ after(grammarAccess.getConstraintParameterVerticalAccess().getRightAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterVertical__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameterVertical__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterVertical__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterVerticalAccess().getRightKeyword_1_1()); }
	'right'
	{ after(grammarAccess.getConstraintParameterVerticalAccess().getRightKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintParameterVertical__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameterVertical__Group_2__0__Impl
	rule__ConstraintParameterVertical__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterVertical__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterVerticalAccess().getLeftAction_2_0()); }
	()
	{ after(grammarAccess.getConstraintParameterVerticalAccess().getLeftAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterVertical__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameterVertical__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterVertical__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterVerticalAccess().getLeftKeyword_2_1()); }
	'left'
	{ after(grammarAccess.getConstraintParameterVerticalAccess().getLeftKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintParameterVertical__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameterVertical__Group_3__0__Impl
	rule__ConstraintParameterVertical__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterVertical__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterVerticalAccess().getMiddleAction_3_0()); }
	()
	{ after(grammarAccess.getConstraintParameterVerticalAccess().getMiddleAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterVertical__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameterVertical__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterVertical__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterVerticalAccess().getMiddleKeyword_3_1()); }
	'middle'
	{ after(grammarAccess.getConstraintParameterVerticalAccess().getMiddleKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintParameterHorizontal__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameterHorizontal__Group_0__0__Impl
	rule__ConstraintParameterHorizontal__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterHorizontal__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterHorizontalAccess().getPersentageAction_0_0()); }
	()
	{ after(grammarAccess.getConstraintParameterHorizontalAccess().getPersentageAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterHorizontal__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameterHorizontal__Group_0__1__Impl
	rule__ConstraintParameterHorizontal__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterHorizontal__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterHorizontalAccess().getValueAssignment_0_1()); }
	(rule__ConstraintParameterHorizontal__ValueAssignment_0_1)
	{ after(grammarAccess.getConstraintParameterHorizontalAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterHorizontal__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameterHorizontal__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterHorizontal__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterHorizontalAccess().getPercentSignKeyword_0_2()); }
	'%'
	{ after(grammarAccess.getConstraintParameterHorizontalAccess().getPercentSignKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintParameterHorizontal__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameterHorizontal__Group_1__0__Impl
	rule__ConstraintParameterHorizontal__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterHorizontal__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterHorizontalAccess().getTopAction_1_0()); }
	()
	{ after(grammarAccess.getConstraintParameterHorizontalAccess().getTopAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterHorizontal__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameterHorizontal__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterHorizontal__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterHorizontalAccess().getTopKeyword_1_1()); }
	'top'
	{ after(grammarAccess.getConstraintParameterHorizontalAccess().getTopKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintParameterHorizontal__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameterHorizontal__Group_2__0__Impl
	rule__ConstraintParameterHorizontal__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterHorizontal__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterHorizontalAccess().getBottomAction_2_0()); }
	()
	{ after(grammarAccess.getConstraintParameterHorizontalAccess().getBottomAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterHorizontal__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameterHorizontal__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterHorizontal__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterHorizontalAccess().getBottomKeyword_2_1()); }
	'bottom'
	{ after(grammarAccess.getConstraintParameterHorizontalAccess().getBottomKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintParameterHorizontal__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameterHorizontal__Group_3__0__Impl
	rule__ConstraintParameterHorizontal__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterHorizontal__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterHorizontalAccess().getMiddleAction_3_0()); }
	()
	{ after(grammarAccess.getConstraintParameterHorizontalAccess().getMiddleAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterHorizontal__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstraintParameterHorizontal__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterHorizontal__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstraintParameterHorizontalAccess().getMiddleKeyword_3_1()); }
	'middle'
	{ after(grammarAccess.getConstraintParameterHorizontalAccess().getMiddleKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ApplicationAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getApplicationApplicationParserRuleCall_0()); }
		ruleApplication
		{ after(grammarAccess.getModelAccess().getApplicationApplicationParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplicationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getApplicationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Application__PanesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApplicationAccess().getPanesPaneParserRuleCall_3_0()); }
		rulePane
		{ after(grammarAccess.getApplicationAccess().getPanesPaneParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pane__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPaneAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPaneAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pane__FramesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPaneAccess().getFramesFrameParserRuleCall_3_0()); }
		ruleFrame
		{ after(grammarAccess.getPaneAccess().getFramesFrameParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__ElementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFrameAccess().getElementsElementsParserRuleCall_2_0()); }
		ruleElements
		{ after(grammarAccess.getFrameAccess().getElementsElementsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__TextAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getTextSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getTextAccess().getTextSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__ConstraintAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getConstraintConstraintParserRuleCall_3_0()); }
		ruleConstraint
		{ after(grammarAccess.getTextAccess().getConstraintConstraintParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__TextAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonAccess().getTextSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getButtonAccess().getTextSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__ConstraintAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonAccess().getConstraintConstraintParserRuleCall_3_0()); }
		ruleConstraint
		{ after(grammarAccess.getButtonAccess().getConstraintConstraintParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__ConstraintTypeAssignment_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getConstraintTypeConstraintTypeVerticalParserRuleCall_0_2_1_0()); }
		ruleConstraintTypeVertical
		{ after(grammarAccess.getConstraintAccess().getConstraintTypeConstraintTypeVerticalParserRuleCall_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__ParamAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getParamConstraintParameterVerticalParserRuleCall_0_4_0()); }
		ruleConstraintParameterVertical
		{ after(grammarAccess.getConstraintAccess().getParamConstraintParameterVerticalParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__ConstraintTypeAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getConstraintTypeConstraintTypeHorizontalParserRuleCall_1_2_1_0()); }
		ruleConstraintTypeHorizontal
		{ after(grammarAccess.getConstraintAccess().getConstraintTypeConstraintTypeHorizontalParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__ParamAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintAccess().getParamConstraintParameterHorizontalParserRuleCall_1_4_0()); }
		ruleConstraintParameterHorizontal
		{ after(grammarAccess.getConstraintAccess().getParamConstraintParameterHorizontalParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterVertical__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintParameterVerticalAccess().getValueIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getConstraintParameterVerticalAccess().getValueIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintParameterHorizontal__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintParameterHorizontalAccess().getValueIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getConstraintParameterHorizontalAccess().getValueIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
